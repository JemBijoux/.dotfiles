# Path to your oh-my-zsh installation.
export ZSH=/Users/jem/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="agnoster"
DEFAULT_USER="jem"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# function precmd () {
#   window_title="\033]0;${PWD##*/}\007"
#   echo -ne "$window_title"
# }

echo -n -e "\033]0;  \007"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git vi-mode osx z)

# User configuration

# export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"
# export MANPATH="/usr/local/man:$MANPATH"

# Mamp PHP in Path (for wp-cli)
# export MAMP_PHP=/Applications/MAMP/bin/php/php5.3.29/bin
# export PATH="$MAMP_PHP:$PATH:/Applications/MAMP/Library/bin"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR='vim'
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
alias zshc="vim ~/.zshrc"
alias ghci="docker run -ti --rm -v `pwd`:`pwd` -w `pwd` haskell"
alias tma="tmux attach"
alias nukeit="rm -rf ./node_modules && yarn install"

# Add RVM to PATH for scripting
# export PATH="$PATH:$HOME/.rvm/bin"

# Add NVM to PATH
export NVM_DIR="/Users/jem/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

# Homebrew's sbin needs to be in path
export PATH="/usr/local/sbin:$PATH"

# sendwithus cli
export PATH="$PATH:/Users/jem/Sites/swu/tool-cli"

# pyenv and pyenv virtualenv-init - Python Environment Settings
export PYENV_ROOT=/usr/local/var/pyenv
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Working with javascript and package managers
alias yn="yarn run"
alias nr="npm run"

# Work aliases
alias swu-web="cd ~/Sites/swu/web-app;pyenv activate sendwithus-web-app"
alias swu-static="cd ~/Sites/swu/static-app"

# Battlesnake Shortcuts
alias jem-snek="cd /Users/jem/Sites/swu/bs/battlesnake.js"
alias run-snek="docker run -it -p 4000:4000 battle_snake_server"
alias snek="cd /Users/jem/Sites/swu/bs/sneksnak"
alias clrvim="rm ~/.dotfiles/vim/tmp/swap/*"

# Work env vars
# export SWU_AWS_ACCESS_KEY_ID=AKIAI2MUBBOURBV7B2KA
# export SWU_AWS_SECRET_ACCESS_KEY=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

# export AWS_SECRET_ACCESS_KEY=$SWU_AWS_SECRET_ACCESS_KEY
# export AWS_ACCESS_KEY_ID=$SWU_AWS_ACCESS_KEY_ID

export SWU_STRIPE_SECRET="sk_test_9psS6B9uwMVxfX8dkPhW8351"
export SWU_STRIPE_PUBLISHABLE="pk_test_jX8YbjoSaKOfzIuzRQc9fA0O"

export KUBECONFIG=$KUBECONFIG:~/.kube/production.kubeconfig

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /Users/jem/.nvm/versions/node/v8.5.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /Users/jem/.nvm/versions/node/v8.5.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /Users/jem/.nvm/versions/node/v8.5.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /Users/jem/.nvm/versions/node/v8.5.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh

# Using `hub` with git
eval "$(hub alias -s)"
# Source the completions in `~/.zsh/completions/_hub`
# https://github.com/github/hub/tree/master/etc
fpath=(~/.zsh/completions $fpath) 
autoload -U compinit && compinit

# ZSH Autocompletions, installed separately
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh

function navi () {
  node ~/Sites/misc/navi/dist/index.js "$@"
  if [ "$?" -eq "3"  ]; then
    echo "we know we're going to"
    node ~/Sites/misc/navi/dist/output.js
    cd $(node ~/Sites/misc/navi/dist/output.js)
  fi
  # navi "$@"
  # PREVIOUS_DIR=$(pwd)
  # echo "Know where you come from:"$PREVIOUS_DIR
  # echo "path"
  # echo  "hi:"$PATHTOVISIT

  # eval "cd $PATHTOVISIT"
  # echo "We moved!"
}

export ASANA_ACCESS_TOKEN="0/aebbf086cafd449e3eda0db87b373544"
